================================================================================
  SAP AUTHORIZATION SETUP - NOTIFICATION BANNER
================================================================================

OVERVIEW
--------
This file contains authorization role template for administrators who can
create, modify, and delete system notifications.

IMPORTANT: Regular users DO NOT need any special role. The notification
banner is publicly accessible - all authenticated SAP users automatically
receive notifications without requiring Z_NOTIFICATION_USER role.


METHOD 1: IMPORT ROLE FROM FILE (RECOMMENDED)
----------------------------------------------

Step 1: Download Role Template
File to download from /abap/roles/ directory:
- Z_NOTIFICATION_ADMIN.SAP (Administrator role)

Step 2: Import Role
Transaction: PFCG

1. Go to PFCG
2. Menu: Role → Upload
3. Select file: Z_NOTIFICATION_ADMIN.SAP
4. Click "Upload"
5. Assign to transport request
6. Generate authorization profile


METHOD 2: MANUAL ROLE CREATION
-------------------------------

ROLE: Z_NOTIFICATION_ADMIN
--------------------------
Transaction: PFCG

1. PFCG → Create Role
2. Role name: Z_NOTIFICATION_ADMIN
3. Description: Notification Banner Administrator

Authorization Objects:
----------------------

Object: S_TABU_DIS (Table Maintenance)
  ACTVT: 01 (Create), 02 (Change), 03 (Display), 06 (Delete)
  DICBERCLS: &NC&

Object: S_TABU_NAM (Table by Name)
  ACTVT: 01, 02, 03, 06
  TABLE: ZTNOTIFY_MSGS

Object: S_DEVELOP (Development Environment)
  ACTVT: 01, 02, 03
  DEVCLASS: * or ZNOTIFY (your package)
  OBJTYPE: TABL, CLAS, DDLS

Object: S_RFC (RFC Access)
  ACTVT: 16 (Execute)
  RFC_NAME: /IWFND/*
  RFC_TYPE: FUNC

Object: S_SERVICE (Service Access)
  SRV_NAME: ZCL_NOTIFICATION_REST
  SRV_TYPE: HTTP

Object: Z_NOTIFY (Custom Authorization Object - see below)
  ACTVT: 01, 02, 03, 06
  NOTIF_TYPE: * (All types)

4. Menu tab: Add transaction codes:
   - SE11 (Data Dictionary)
   - SE24 (Class Builder)
   - SE80 (Object Navigator)
   - SM30 (Table Maintenance - ZTNOTIFY_MSGS)
   - SICF (HTTP Service)

5. Generate profile
6. Assign users


METHOD 3: CREATE CUSTOM AUTHORIZATION OBJECT (OPTIONAL)
-------------------------------------------------------

IMPORTANT: This is OPTIONAL. The notification system works without custom
authorization objects using only standard SAP authorizations.

If you want fine-grained control over notification types:

Transaction: SU21 (Authorization Object Maintenance)

1. Create Authorization Object:
   Object: Z_NOTIFY
   Object Class: BC (Basis Components)
   Description: Notification Banner Authorization

2. Add Fields:
   Field Name: ACTVT (Activity)
     Data Element: ACTIV_AUTH
     Values: 01 (Create), 02 (Change), 03 (Display), 06 (Delete)

   Field Name: NOTIF_TYPE (Notification Type)
     Data Element: CHAR10
     Values: URGENT, INFO, WARNING, SUCCESS, MAINTENANCE, * (All)

3. Save and generate
4. Assign to Z_NOTIFICATION_ADMIN role in PFCG


USER ASSIGNMENT
---------------

Z_NOTIFICATION_ADMIN → Assign to:
- System administrators
- Notification managers
- Operations team leads
- Basis team members

Regular Users:
- NO ROLE ASSIGNMENT NEEDED
- All authenticated SAP users automatically see notifications
- No special authorization required for viewing notifications
- Public access via standard SAP authentication


TESTING AUTHORIZATIONS
----------------------

1. Assign Z_NOTIFICATION_ADMIN to test administrator user
2. Login as administrator
3. Test admin functions:
   - Transaction SM30 → Table ZTNOTIFY_MSGS
   - Create test notification
   - Verify CRUD operations work

4. Login as regular user (NO special role)
5. Open any Fiori Launchpad application
6. Verify banner appears with active notifications
7. Regular users can see and close notifications (no admin role needed)


TRANSPORT CONSIDERATIONS
------------------------

When transporting roles between systems:

1. Export role:
   Transaction: PFCG
   Role: Z_NOTIFICATION_ADMIN
   Menu: Role → Download

2. Transport via:
   - Manual export/import (PFCG)
   - Transport request (recommended)
   - ChaRM process (for large enterprises)

3. Generate profile in target system:
   PFCG → Z_NOTIFICATION_ADMIN → Generate


TROUBLESHOOTING
---------------

Issue: Administrator cannot create notifications
→ Solution: Verify Z_NOTIFICATION_ADMIN assigned, check authorization trace SU53

Issue: Regular users don't see notifications
→ Solution: Check notifications are ACTIVE in ZTNOTIFY_MSGS, verify REST service
   is active in SICF, ensure date range is valid (START_DATE <= today <= END_DATE)

Issue: "No authorization for service" error
→ Solution: Check SICF service /default_host/sap/bc/rest/zcl_notification_rest
   is active and has correct handler class ZCL_NOTIFICATION_REST

Issue: REST API returns 403 Forbidden for regular users
→ Solution: Verify ICF service allows anonymous access OR all users have basic
   SAP authentication (default). NO Z_NOTIFICATION_USER role needed.


SECURITY NOTES
--------------

1. REST API Access:
   - GET /sap/bc/rest/zcl_notification_rest/ is PUBLIC
   - All authenticated SAP users can retrieve notifications
   - No special role required for read access

2. Admin Operations:
   - POST/PUT/DELETE require Z_NOTIFICATION_ADMIN role
   - Managed in ZCL_NOTIFICATION_REST class
   - Check user authorization before modifications

3. Database Security:
   - Direct table access (SM30, SE16) requires admin role
   - Regular users cannot modify ZTNOTIFY_MSGS directly
   - All user access goes through REST API layer


PUBLIC ACCESS CONFIGURATION
---------------------------

The notification banner is designed for PUBLIC access by all SAP users.

REST API Configuration (Transaction: SICF):
Path: /default_host/sap/bc/rest/zcl_notification_rest

Service Settings:
- Service Active: ✓ Yes
- Authentication: SAP Standard (Logon Ticket, Basic Auth)
- Anonymous Access: ☐ No (not recommended for security)
- User Restrictions: None (all authenticated users)

ABAP Code Check (ZCL_NOTIFICATION_REST):
- GET method: No authorization check (public read)
- POST/PUT/DELETE methods: Check for Z_NOTIFICATION_ADMIN role

Example authorization check in ABAP:
```abap
METHOD handle_create_notification.
  " Check if user has admin role
  AUTHORITY-CHECK OBJECT 'S_USER_GRP'
    ID 'CLASS' FIELD 'Z_NOTIFICATION_ADMIN'
    ID 'ACTVG' FIELD '01'.

  IF sy-subrc <> 0.
    " Return 403 Forbidden
    mo_response->set_status( cl_rest_status_code=>gc_client_error_forbidden ).
    RETURN.
  ENDIF.

  " Continue with creation...
ENDMETHOD.
```


================================================================================
END OF AUTHORIZATION SETUP
================================================================================