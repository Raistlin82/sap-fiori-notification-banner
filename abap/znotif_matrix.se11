*&---------------------------------------------------------------------*
*& Database Table: ZNOTIF_MATRIX
*&---------------------------------------------------------------------*
*& Notification Matrix Customizing Table
*& Defines valid combinations of Severity + Message Type + Display Mode
*& S/4HANA PCE 2023 Compatible
*&
*& PURPOSE:
*&   - Control which Display Modes are valid for each Severity/MessageType
*&   - Define default Display Mode for each combination
*&   - Mark combinations that require user acknowledgment tracking
*&   - Prevent invalid notification configurations (e.g., HIGH+TOAST)
*&
*& USAGE:
*&   - Populated by report Z_LOAD_NOTIF_MATRIX (33 valid combinations)
*&   - Used by zcl_notification_manager=>validate_notif_combination
*&   - Used by REST endpoint GET /valid-modes for UI dropdown filtering
*&
*& INSTRUCTIONS FOR SE11 TABLE CREATION:
*&
*& STEP 1: Verify Custom Domains Exist (SE11 → Domain)
*&   These domains should already exist from ZTNOTIFY_MSGS:
*&   - ZDOMAIN_SEVERITY (see domains/zdomain_severity.se11)
*&   - ZDOMAIN_MSG_TYPE (see domains/zdomain_msg_type.se11)
*&   - ZDOMAIN_DISPLAY_MODE (see domains/zdomain_display_mode.se11)
*&
*& STEP 2: Verify Custom Data Elements Exist (SE11 → Data Type)
*&   These data elements should already exist from ZTNOTIFY_MSGS:
*&   - ZNOTIFY_SEVERITY based on ZDOMAIN_SEVERITY
*&   - ZNOTIFY_MSG_TYPE based on ZDOMAIN_MSG_TYPE
*&   - ZNOTIFY_DISP_MODE based on ZDOMAIN_DISPLAY_MODE
*&
*& STEP 3: Create Database Table (SE11 → Database Table)
*&   1. Transaction: SE11
*&   2. Select "Database Table"
*&   3. Enter table name: ZNOTIF_MATRIX
*&   4. Click "Create"
*&   5. Copy field definitions below into the table maintenance screen
*&   6. Set Delivery Class: C (Customizing table, client-dependent)
*&   7. Set Data Browser/Table View Maint.: Display/Maintenance Allowed
*&   8. Save and activate
*&
*& STEP 4: Load Initial Data
*&   Execute report: Z_LOAD_NOTIF_MATRIX (see z_load_notif_matrix.prog.abap)
*&   This loads 33 valid combinations based on business rules
*&
*& STEP 5: Create Table Maintenance Generator (Optional)
*&   Transaction: SE11 → Utilities → Table Maintenance Generator
*&   - Authorization Group: &NC& (No check)
*&   - Function Group: ZNOTIF_MATRIX
*&   - Maintenance Type: One step
*&   - Maintenance Screen: 9001
*&   - After generation, use SM30 to maintain matrix entries
*&---------------------------------------------------------------------*

*-- Field Definitions for SE11 (copy these into the table fields):

Field Name        Key  Data Element       Data Type  Length  Decimals  Description
--------------------------------------------------------------------------------
MANDT             X    MANDT              CLNT       3       0         Client
SEVERITY          X    ZNOTIFY_SEVERITY   CHAR       8       0         Severity Level (HIGH/MEDIUM/LOW)
MESSAGE_TYPE      X    ZNOTIFY_MSG_TYPE   CHAR       12      0         Message Type (URGENT/WARNING/INFO/TIP/MAINT)
DISPLAY_MODE      X    ZNOTIFY_DISP_MODE  CHAR       10      0         Display Mode (BANNER/TOAST/BOTH/SILENT)
ACTIVE                 CHAR1              CHAR       1       0         Active Flag (X/' ') - Combination is allowed
IS_DEFAULT             CHAR1              CHAR       1       0         Default Flag (X/' ') - Auto-select this mode
REQUIRES_ACK           CHAR1              CHAR       1       0         Requires Acknowledgment (X/' ') - Track user read
SORT_ORDER             NUMC2              NUMC       2       0         Display Order (01-99)
DESCRIPTION            CHAR255            CHAR       255     0         Explanation of combination rules
CHANGED_BY             SYUNAME            CHAR       12      0         Last Changed By User
CHANGED_AT             TIMESTAMPL         DEC        21      7         Last Changed Timestamp

*-- Technical Settings (SE13):
*   Data Class: APPL2 (Customizing data)
*   Size Category: 0 (0-1,200 records expected - we have 33 combinations)
*   Buffering: Allowed (Single Record Buffering)
*     - Matrix data rarely changes
*     - High read frequency during validation
*     - Small dataset (33 rows)
*     - Perfect candidate for buffering

*-- Table Maintenance Generator (SM30):
*   Authorization Group: &NC& (No check)
*   Function Group: ZNOTIF_MATRIX
*   Maintenance Type: One step
*   Maintenance Screen: 9001

*-- Primary Key: MANDT + SEVERITY + MESSAGE_TYPE + DISPLAY_MODE
*   This ensures uniqueness of combinations
*   No secondary indexes needed (small table, primary key is sufficient)

*-- Field Details and Usage:

*   SEVERITY (Key Field):
*     - Data Element: ZNOTIFY_SEVERITY (reused from ZTNOTIFY_MSGS)
*     - Domain: ZDOMAIN_SEVERITY with fixed values HIGH, MEDIUM, LOW
*     - Automatic F4 help from domain
*     - Part of composite key

*   MESSAGE_TYPE (Key Field):
*     - Data Element: ZNOTIFY_MSG_TYPE (reused from ZTNOTIFY_MSGS)
*     - Domain: ZDOMAIN_MSG_TYPE with fixed values URGENT, WARNING, INFO, TIP, MAINT
*     - Automatic F4 help from domain
*     - Part of composite key

*   DISPLAY_MODE (Key Field):
*     - Data Element: ZNOTIFY_DISP_MODE (reused from ZTNOTIFY_MSGS)
*     - Domain: ZDOMAIN_DISPLAY_MODE with fixed values BANNER, TOAST, BOTH, SILENT
*     - Automatic F4 help from domain
*     - Part of composite key

*   ACTIVE (CHAR1):
*     - 'X' = This combination is allowed and will pass validation
*     - ' ' or blank = This combination is invalid and will be rejected
*     - Use: zcl_notification_manager=>validate_notif_combination checks this
*     - Example: HIGH + TOAST would have ACTIVE = ' ' (not allowed)

*   IS_DEFAULT (CHAR1):
*     - 'X' = This is the default display mode for this severity+message_type
*     - ' ' or blank = Not the default
*     - Only ONE display_mode per severity+message_type should have IS_DEFAULT='X'
*     - Use: GET /valid-modes returns default_mode for UI auto-selection
*     - Example: HIGH + URGENT → BANNER is default (IS_DEFAULT='X')

*   REQUIRES_ACK (CHAR1):
*     - 'X' = Track user acknowledgment for this combination
*     - ' ' or blank = Do not track acknowledgment
*     - Business Rule: Track only for BANNER/BOTH + (HIGH severity OR URGENT type)
*     - Rationale:
*       - BANNER/BOTH = User must explicitly close → reliable tracking
*       - TOAST = Auto-dismisses after 5s → unreliable tracking
*       - SILENT = No UI shown → nothing to acknowledge
*       - HIGH/URGENT = Critical messages that need confirmation
*     - Use: Copied to ZTNOTIFY_MSGS.REQUIRES_ACK during notification creation

*   SORT_ORDER (NUMC2):
*     - Display order in dropdowns (01-99)
*     - Lower numbers appear first
*     - Example: BANNER=01, TOAST=02, BOTH=03, SILENT=04
*     - Use: GET /valid-modes returns display_modes ordered by sort_order

*   DESCRIPTION (CHAR255):
*     - Human-readable explanation of why this combination exists
*     - Helps administrators understand business rules
*     - Examples:
*       "Critical urgent messages with mandatory acknowledgment"
*       "Low priority tips best shown as dismissible toasts"
*     - Not used programmatically, purely documentation

*   CHANGED_BY / CHANGED_AT:
*     - Audit trail for customizing changes
*     - Updated automatically by SM30 or manual updates
*     - Not used in validation logic

*-- Business Rules Encoded in Matrix (33 Valid Combinations):

*   HIGH Severity (9 combinations):
*     - HIGH + URGENT   → BANNER(default, ack), BOTH(ack)
*     - HIGH + WARNING  → BANNER(default, ack), BOTH(ack)
*     - HIGH + MAINT    → BANNER(default, ack), BOTH
*     - HIGH + INFO     → BANNER(default), BOTH, SILENT
*     - HIGH + TIP      → All blocked (tips are not critical)

*   MEDIUM Severity (19 combinations):
*     - MEDIUM + URGENT  → BANNER(default, ack), BOTH(ack)
*     - MEDIUM + WARNING → BANNER(default), TOAST, BOTH
*     - MEDIUM + MAINT   → BANNER(default), TOAST, BOTH, SILENT
*     - MEDIUM + INFO    → BANNER, TOAST(default), BOTH, SILENT
*     - MEDIUM + TIP     → BANNER, TOAST(default), SILENT

*   LOW Severity (5 combinations):
*     - LOW + URGENT    → All blocked (low severity cannot be urgent)
*     - LOW + WARNING   → TOAST(default), SILENT
*     - LOW + MAINT     → TOAST(default), SILENT
*     - LOW + INFO      → TOAST(default), SILENT
*     - LOW + TIP       → TOAST(default), SILENT

*   Total: 33 valid combinations out of 60 possible (3 severities × 5 types × 4 modes)

*-- Example SM30 Entries (First Few Rows):

* MANDT | SEVERITY | MESSAGE_TYPE | DISPLAY_MODE | ACTIVE | IS_DEFAULT | REQUIRES_ACK | SORT_ORDER | DESCRIPTION
*-------+----------+--------------+--------------+--------+------------+--------------+------------+-------------
* 001   | HIGH     | URGENT       | BANNER       | X      | X          | X            | 01         | Critical urgent...
* 001   | HIGH     | URGENT       | BOTH         | X      |            | X            | 02         | Critical urgent...
* 001   | HIGH     | WARNING      | BANNER       | X      | X          | X            | 03         | Critical warning...
* ...

*-- Migration Strategy for Existing Data:
*   After creating this table and loading matrix data:
*   1. Execute report: Z_MIGRATE_NOTIF_TO_MATRIX
*   2. Report finds notifications with invalid combinations
*   3. Auto-corrects to matrix default for that severity+message_type
*   4. Updates REQUIRES_ACK field based on matrix
*   5. Generates log of all corrections for review

*-- Delivery Class: C (Customizing Table, Client-Dependent)
*   - Data maintained per client (MANDT key field)
*   - Transported via customizing transports (BC sets)
*   - Can be modified by customer after delivery
*   - Not overwritten by support packages

*-- Version History:
*   v1.2.0: Initial matrix table for notification validation
*           - Replaces uncontrolled display_mode selection
*           - Enables user acknowledgment tracking
*           - Foundation for future analytics

*-- Related Objects:
*   Programs:
*     - Z_LOAD_NOTIF_MATRIX (initial data load)
*     - Z_MIGRATE_NOTIF_TO_MATRIX (migrate existing notifications)
*
*   Classes:
*     - zcl_notification_manager=>validate_notif_combination
*     - zcl_notification_manager=>get_valid_display_modes
*
*   REST Endpoints:
*     - GET /api/notifications/valid-modes (UI dropdown)
*
*   Tables:
*     - ZTNOTIFY_MSGS (main notification table)
*     - ZNOTIF_MATRIX (this customizing table)
